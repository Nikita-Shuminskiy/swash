import {action, makeAutoObservable, makeObservable, observable} from 'mobx';import {LoadingEnum, NotificationType} from "../types/types";import { useState } from 'react'export class NotificationStore {    isLoading: LoadingEnum = LoadingEnum.fetching;    isLocalLoading: LoadingEnum = LoadingEnum.initial;    serverResponseText: string | undefined = '';    setIsLoading = (isLoading: LoadingEnum): void => {        this.isLoading = isLoading;    };    setLocalLoading = (isLoading: LoadingEnum): void => {        this.isLocalLoading = isLoading;    };    setServerErrorText = (text: string): void => {        this.serverResponseText = text;    };    setServerResponse = (        payload: {            serverResponse: string | undefined,        }    ): void => {        const {serverResponse} = payload        this.serverResponseText = serverResponse;        if (serverResponse) {         this.setServerErrorText(serverResponse)        }    };    constructor() {        makeAutoObservable(this)    }}export default new NotificationStore();