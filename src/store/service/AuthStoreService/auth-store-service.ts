import RootStore from '../../RootStore'import { LoadingEnum } from '../../types/types'import { deviceStorage } from '../../../utils/storage/storage'export class AuthStoreService {	rootStore: typeof RootStore	constructor(rootStore: typeof RootStore) {		this.rootStore = rootStore	}	async sendClientVerifyCode(code: string): Promise<any | void> {		try {			const data = await this.rootStore.AuthStore.sendClientVerifyCode(code)			return data.data		} catch (e) {			console.log(e, 'sendClientVerifyCode')			this.rootStore.Notification.setNotification('error', true, 'sendClientVerifyCode')		} finally {		}	}	async sendClientCode(formattedPhoneNumber?: string): Promise<boolean | void> {		try {			const data = await this.rootStore.AuthStore.sendClientCode(formattedPhoneNumber)			return true		} catch (e) {			console.log(e, 'sendClientCode')			this.rootStore.Notification.setNotification('error', true, 'sendClientCode')		} finally {		}	}	async checkToken(): Promise<boolean | void> {		try {			const token = await deviceStorage.getItem('token')			return true		} catch (e) {			return false		} finally {		}	}}export default AuthStoreService