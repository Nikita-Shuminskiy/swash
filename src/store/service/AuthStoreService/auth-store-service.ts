import RootStore from '../../RootStore'import { LoadingEnum } from '../../types/types'import { deviceStorage } from '../../../utils/storage/storage'export class AuthStoreService {	rootStore: typeof RootStore	constructor(rootStore: typeof RootStore) {		this.rootStore = rootStore	}	async getClientBaseInfo() {		this.rootStore.Notification.setIsLoading(LoadingEnum.fetching)		try {			const token = await deviceStorage.getItem('token')			if (token) {				const data = await this.rootStore.AuthStore.getBaseInfoClient()			}		} catch (e) {			console.log(e, 'getClientBaseInfo')		} finally {			this.rootStore.Notification.setIsLoading(LoadingEnum.success)		}	}	async sendClientVerifyCode(phone: string): Promise<boolean | void> {		this.rootStore.Notification.setIsLoading(LoadingEnum.fetching)		try {			const data = await this.rootStore.AuthStore.sendClientVerifyCode(phone)			return true		} catch (e) {			console.log(e, 'sendClientVerifyCode')		} finally {			this.rootStore.Notification.setIsLoading(LoadingEnum.success)		}	}}export default AuthStoreService